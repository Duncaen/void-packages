# Template file for 'podman'
pkgname=podman
version=5.5.1
revision=1
build_style=go
go_import_path="github.com/containers/podman/v5"
go_package="
 ${go_import_path}/cmd/podman
 ${go_import_path}/cmd/rootlessport
 $(vopt_if systemd "${go_import_path}/cmd/quadlet")"
go_build_tags="seccomp apparmor containers_image_ostree_stub cni"
hostmakedepends="pkg-config go-md2man python3 mdocml"
makedepends="gpgme-devel libseccomp-devel device-mapper-devel libbtrfs-devel
 $(vopt_if systemd libsystemd-devel)"
depends="runc conmon cni-plugins slirp4netns fuse-overlayfs containers-common
 containers.image containers.storage netavark passt"
checkdepends="qemu"
short_desc="Simple management tool for containers and images"
maintainer="Cameron Nemo <cam@nohom.org>"
license="Apache-2.0"
homepage="https://podman.io/"
changelog="https://raw.githubusercontent.com/containers/podman/main/RELEASE_NOTES.md"
distfiles="https://github.com/containers/podman/archive/v${version}.tar.gz"
checksum=00d02f85ad27a46e77456fef1be81865a43147544ed2487e6c4c8decd0e3748f

build_options="systemd"

if [ "$CROSS_BUILD" ]; then
	go_build_tags+=" containers_image_openpgp"
fi

case $XBPS_TARGET_MACHINE in
	aarch64* | x86_64*) ;;
	*) make_check="no" ;; # Upstream only supports tests on aarch64 and x86_64
esac

post_build() {
	# doind this manual here since we don't have per go_package go_build_tags.
	# build instead of install since -o doesnt work with that.
	go build -p "$XBPS_MAKEJOBS" -mod=vendor -modcacherw -v \
		-tags "remote exclude_graphdriver_btrfs btrfs_noversion exclude_graphdriver_devicemapper containers_image_openpgp" \
		-o podman-remote "${go_import_path}/cmd/podman"
	make docs
}

do_check() {
	rm -v cmd/quadlet/main_test.go # TODO fix this with something like export TESTFLAGS="--skip-package quadlet --skip-file quadlet"
	make .install.ginkgo
	make localunit
}

post_install() {
	vmkdir usr/libexec/podman
	mv "${DESTDIR}/usr/bin/rootlessport" "${DESTDIR}/usr/libexec/podman/rootlessport"

	make install.man DESTDIR="${DESTDIR}" PREFIX="/usr"
	make install.completions DESTDIR="${DESTDIR}" PREFIX="/usr"

	cp vendor/github.com/containers/common/pkg/config/containers.conf \
		containers.cgfs.conf

	if [ "$build_option_systemd" ]; then
		make install.systemd DESTDIR="${DESTDIR}" PREFIX="/usr"
		mv "${DESTDIR}/usr/bin/quadlet" "${DESTDIR}/usr/libexec/podman/quadlet"
		mkdir -p "${DESTDIR}/usr/lib/systemd/system-generators" "${DESTDIR}/usr/lib/systemd/user-generators"
		ln -fsr "${DESTDIR}/usr/libexec/podman/quadlet" "${DESTDIR}/usr/lib/systemd/system-generators/podman-system-generator"
		ln -fsr "${DESTDIR}/usr/libexec/podman/quadlet" "${DESTDIR}/usr/lib/systemd/user-generators/podman-user-generator"
	else
		vsed -i -e 's|#cgroup_manager = "systemd"|cgroup_manager = "cgroupfs"|g' \
			containers.cgfs.conf
	fi

	vbin podman-remote

	ln -sf podman ${DESTDIR}/usr/bin/podmansh

	vinstall containers.cgfs.conf 644 usr/share/containers containers.conf

	vsv podman
	vsv podman-docker
}
