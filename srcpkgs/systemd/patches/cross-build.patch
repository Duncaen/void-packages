--- a/meson.build
+++ b/meson.build
@@ -2685,6 +2693,15 @@
                 install : dbus_interfaces_dir != 'no',
                 install_dir : fs.parent(dbus_interfaces_dir),
                 command : [export_dbus_interfaces_py, '@OUTPUT@', dbus_programs])
+else
+        qemu_arch = {}.get(host_machine.cpu_family(), host_machine.cpu_family())
+        custom_target(
+                'export-dbus-interfaces',
+                output : fs.name(dbus_interfaces_dir),
+                install : dbus_interfaces_dir != 'no',
+                install_dir : fs.parent(dbus_interfaces_dir),
+                command : [export_dbus_interfaces_py, '@OUTPUT@', dbus_programs],
+                env : ['QEMU=/usr/bin/qemu-@0@-static'.format(qemu_arch)])
 endif
 
 ############################################################
--- a/tools/dbus_exporter.py
+++ b/tools/dbus_exporter.py
@@ -7,6 +7,9 @@
 
 
 def extract_interfaces_xml(output_dir, executable):
+    wrap = []
+    if qemu := os.environ.get('QEMU'):
+        wrap.append(qemu)
     # If proc is not mounted, set LD_ORIGIN_PATH so that shared/core libs can be found,
     # as glibc looks at /proc/self/exe when resolving RPATH
     env = os.environ.copy()
@@ -14,7 +17,7 @@
         env["LD_ORIGIN_PATH"] = executable.parent.as_posix()
 
     proc = run(
-        args=[executable.absolute(), '--bus-introspect', 'list'],
+        args=wrap + [executable.absolute(), '--bus-introspect', 'list'],
         stdout=PIPE,
         env=env,
         check=True,
@@ -24,7 +27,7 @@
 
     for interface_name in interface_names:
         proc = run(
-            args=[executable.absolute(), '--bus-introspect', interface_name],
+            args=wrap + [executable.absolute(), '--bus-introspect', interface_name],
             stdout=PIPE,
             env=env,
             check=True,
